<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
    <ui:define name="breadCrumb">
        <p:breadCrumb class="Container90">
            <p:menuitem value="Home" url="/"/>
            <p:menuitem value="Gestionar Año Escolar" url="#"/>
            <p:menuitem value="Gestionar Clase" url="#"/>
            <p:menuitem value="Clase en Vivo" url="#{siteUrls.claseOnline}"/>
            <p:menuitem value="Transmitir Clase En Vivo:#{gestionClasesOnlineController.claseActual.clTema}" url="#"/>
            <p:separator />
        </p:breadCrumb>
        <i class="icon-question Fs25 Red Container2 ui-breadcrumb" style="cursor: pointer;" onclick="PF('dlgAyuda').show();"></i>
    </ui:define>
    <ui:define name="head">
        <h:outputScript name="RTCMultiConnection.js" library="js" />
        <script>
            var usuarioActual = '#{loginController.nombreCompleto}';
            var transmitiendo = false;
            var connection;
            var streamId = "";
            var grabando = false;
            var transmitir = function () {
                connection = new RTCMultiConnection('id_#{gestionClasesOnlineController.claseActual.idClase}');
                connection.media.min(320, 240);
                connection.media.max(320, 240);
                connection.userid = usuarioActual;//usuario unico
                connection.mediaConstraints.mandatory = {
                    minWidth: 320,
                    maxWidth: 640,
                    minHeight: 240,
                    maxHeight: 480,
                    minFrameRate: 25
                };
// easiest way to customize what you need!
                connection.session = {
                    audio: true,
                    video: true
                };
                connection.bandwidth = {
                    audio: 25,
                    video: 128,
                    data: 1638400,
                    screen: 128      // 300kbps
                };

// on getting local or remote media stream
                connection.onstream = function (e) {
                    streamId = e.streamid;
                    if (e.type === 'remote') {
                        $('.usuarios').val(e.userid + "#{formatUtils.separadorUsuarios}");
                    }
                    if ($("#video").html() === "") {
                        document.getElementById("video").appendChild(e.mediaElement);
//                        document.body.appendChild(e.mediaElement);
                    }
                };
// setup signaling channel
                connection.connect('id_#{gestionClasesOnlineController.claseActual.idClase}');
// open new session
                connection.open('id_#{gestionClasesOnlineController.claseActual.idClase}');
                transmitiendo = true;
            };
            var pararTransmision = function () {
                if (transmitiendo) {
                    connection.close();
                }
            };
            var iniciarGrabacion = function () {
                if (transmitiendo) {
                    connection.streams[streamId].startRecording({
                        audio: true,
                        video: true
                    });
                }
            };
            var pararGrabacion = function () {
                if (transmitiendo) {
                    connection.streams[streamId].stopRecording(function (audioBlob, videoBlob) {
                        //blob.audio
                        //blob.video
                    }, {audio: true, video: true});
                }
            };
            var grabacion = function () {
//                            alert("init grab");
                if (transmitiendo) {
                    if (grabando) {
                        grabando = false;
                        pararGrabacion();
                    } else {
                        grabando = true;
                        iniciarGrabacion();
                    }
                }
            };
            var transmision = function () {
//                            alert("init trans");
                if (!transmitiendo) {
                    transmitir();
                } else {
                    pararTransmision();
                }
            };
        </script>
    </ui:define>
    <ui:define name="content">
        <div class="EmptyBox5"></div>
        <p:panel>
            <h:form id="form">
                <p:outputLabel value="Curso:#{gestionClasesOnlineController.claseActual.idCurso.crNombre}"></p:outputLabel>
                <p:inputText id="usuarios" class="usuarios" style="display: none"></p:inputText>
                <p:dialog widgetVar="dlgAyuda" modal="true" appendTo="@(body)" header="Ayuda" width="400" maximizable="true">
                    <ui:include src="ayuda/transmitir.xhtml"></ui:include>
                </p:dialog>
                <div class="EmptyBox20"></div>
                <div id="video"></div>
                <div class="Container25 Responsive">
                    <p:poll autoStart="true" update="usuariosConect" interval="10" listener="#{gestionClasesOnlineController.actualizarUsuarios()}"></p:poll>
                    <p:panel header="Alumnos Conectados" class="Container100 ContainerIndent">
                        <p:dataScroller id="usuariosConect" value="#{gestionClasesOnlineController.listaUsuarios}" var="usuario" class="Container100">
                            <p:panelGrid columns="2" class="Container100 ContainerIndent">
                                <i class="icon-round58 Fs40"></i>
                                <div class="EmptyBox20"></div>
                                <p:outputLabel value="#{usuario}"></p:outputLabel>
                            </p:panelGrid>        
                        </p:dataScroller>
                    </p:panel>
                </div>
                <div class="EmptyBox20"></div>
                <div class="Container100">
                    <p:selectBooleanButton offLabel="Iniciar Transmisión" onLabel="Parar Transmición" onchange="transmision()" valueChangeListener="#{gestionClasesOnlineController.iniciarClase()}"></p:selectBooleanButton>
                    
                    <p:commandButton id="otrasOpciones" value="Otras opciones" type="button" icon="ui-icon-extlink" />
                    <p:tieredMenu overlay="true" trigger="otrasOpciones" my="left top" at="left bottom" style="width:200px">
                        <p:menuitem value="Gestionar Docentes" >    
                        </p:menuitem>
                        <p:menuitem value="Gestionar Alumnos">    
                        </p:menuitem>
                        <p:menuitem value="Gestionar Cursos">    
                        </p:menuitem>
                    </p:tieredMenu>
                </div>
            </h:form>
            <div class="EmptyBox5"></div>
        </p:panel>
    </ui:define>
</ui:composition>